{"version":3,"file":"static/js/539.541cfce9.chunk.js","mappings":"gMAOA,MASaA,EAAOC,EAAAA,GAAAA,KAAW,qNAelBC,GALYD,EAAAA,GAAAA,IAAU,gEAKdA,EAAAA,GAAAA,MAAY,iOAItBE,EAAAA,IACP,QAAC,WAAEC,GAAY,QA7BCC,KAClB,OAAQA,GACN,IAAK,MACL,IAAK,YAAU,MAAO,cACtB,IAAK,WAAY,MAAO,cACxB,QAAS,MAAO,eAAe,EAwBXC,CAAWF,EAAW,KAOjCG,EAAaN,EAAAA,GAAAA,OAAa,6QAORO,EAAAA,GAIIL,EAAAA,IAGtBM,EAAYR,EAAAA,GAAAA,MAAY,6QAONO,EAAAA,GAIIL,EAAAA,IAItBO,EAAmBT,EAAAA,GAAAA,OAAa,iWAO3BE,EAAAA,GASIA,EAAAA,I,wBCjFP,SAASQ,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,YACvCC,EAAMC,IAAWC,EAAAA,EAAAA,UAASN,EAAKI,OAC/BG,EAAOC,IAAYF,EAAAA,EAAAA,UAASN,EAAKO,QACjCE,EAAKC,IAAUJ,EAAAA,EAAAA,UAASN,EAAKS,MAC7BE,EAAUC,IAAeN,EAAAA,EAAAA,UAASN,EAAKW,WACvCE,EAAQC,IAAaR,EAAAA,EAAAA,UAASN,EAAKa,QAc1C,OACE,UAAC3B,EAAI,YACH,UAACE,EAAK,CAAC2B,QAAQ,OAAM,UAAC,SAEpB,SAACpB,EAAS,CACRqB,KAAK,OACLZ,KAAK,OACLa,MAAOb,EACPc,SAAWC,GAAMd,EAAQc,EAAEC,OAAOH,aAGtC,UAAC7B,EAAK,CAAC2B,QAAQ,QAAO,UAAC,UAErB,SAACpB,EAAS,CACR0B,UAAQ,EACRL,KAAK,QACLZ,KAAK,QACLa,MAAOV,EACPW,SAAWC,GAAMX,EAASW,EAAEC,OAAOH,aAGvC,UAAC7B,EAAK,CAAC2B,QAAQ,SAASzB,WAAW,YAAQ,UAAC,cAE1C,UAACG,EAAU,CAACwB,MAAOJ,EAAQK,SAAWC,GAAML,EAAUK,EAAEC,OAAOH,OAAO,WACpE,mBACEK,gBAAc,EACdC,QAAM,EACNN,MAAOJ,EAAO,SAEbA,KAEH,mBACEI,MAAM,YAAW,SAClB,eAGD,mBACEA,MAAM,WAAU,SACjB,cAGD,mBACEA,MAAM,WAAU,SACjB,oBAKL,UAAC7B,EAAK,CAAC2B,QAAQ,MAAMzB,WAAW,MAAK,UAAC,QAEpC,SAACK,EAAS,CACR0B,UAAQ,EACRL,KAAK,OACLZ,KAAK,MACLa,MAAOR,EACPS,SAAWC,GAAMT,EAAOS,EAAEC,OAAOH,aAGrC,SAACrB,EAAgB,CAAC4B,QAAUL,GAtEhC,SAAsBA,GACpBA,EAAEM,iBACF3B,EAAS4B,EAAAA,GAAuB,CAC9BC,YAAa,CACXvB,OACAG,QACAE,MACAE,WACAE,YAGN,CA2DsCe,CAAaT,GAAG,SAAC,aAGzD,C","sources":["Components/Form/profile/styled.js","Components/Form/profile/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport {\r\n  grayText, darkRedColor, yellowColor, darkBlueColor, lightGrayColor,\r\n  darkGrayColor,\r\n} from '../../../style/colors';\r\n\r\nconst InputWidth = (width) => {\r\n  switch (width) {\r\n    case 'cpf': return 'width: 40%;';\r\n    case 'Gênero': return 'width: 40%;';\r\n    case 'password': return 'width: 50%;';\r\n    default: return 'width: 100%;';\r\n  }\r\n};\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin-top: 15px;\r\n    min-width: 100%;\r\n    min-height: 80%;\r\n    padding: 10px;\r\n`;\r\nexport const Container = styled.div`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: ${darkRedColor};\r\n  ${({ inputWidth }) => InputWidth(inputWidth)}\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin-right: 5px;\r\n  margin-left: 10px;\r\n  padding: 20px;\r\n  `;\r\nexport const SelectForm = styled.select`\r\n    height: 30px;\r\n    width: 80%;\r\n    padding-left: 5px;\r\n    margin-top: 5px;\r\n    border: none;\r\n    background: none;\r\n    border-bottom: 2px solid ${darkGrayColor};\r\n\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 2px solid ${darkRedColor};\r\n     }\r\n`;\r\nexport const InputForm = styled.input`\r\n    height: 30px;\r\n    width: 80%;\r\n    padding-left: 5px;\r\n    margin-top: 5px;\r\n    border: none;\r\n    background: none;\r\n    border-bottom: 2px solid ${darkGrayColor};\r\n\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 2px solid ${darkRedColor};\r\n     }\r\n`;\r\n\r\nexport const ButtonSubmitForm = styled.button`\r\n    width: 50%;\r\n    height: 55px;\r\n    font-weight: bold;\r\n    border-style: none;\r\n    font-size: 15px;\r\n    border-radius: 15px;\r\n    background: ${darkRedColor};\r\n    color: #fff;\r\n    position: relative;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    cursor: pointer;\r\n    :hover{\r\n        background: ${darkRedColor};\r\n    }\r\n`;\r\n","import { useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Form, Label, InputForm, SelectForm, ButtonSubmitForm,\r\n} from './styled';\r\nimport * as actionUser from '../../../store/modules/userInfo/actions';\r\n\r\nexport default function Profile() {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.userInfo);\r\n  const [name, setName] = useState(user.name);\r\n  const [email, setEmail] = useState(user.email);\r\n  const [cpf, setCpf] = useState(user.cpf);\r\n  const [password, setPassword] = useState(user.password);\r\n  const [gender, setGender] = useState(user.gender);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    dispatch(actionUser.userRequest({\r\n      userProfile: {\r\n        name,\r\n        email,\r\n        cpf,\r\n        password,\r\n        gender,\r\n      },\r\n    }));\r\n  }\r\n  return (\r\n    <Form>\r\n      <Label htmlFor=\"nome\">\r\n        Nome:\r\n        <InputForm\r\n          type=\"text\"\r\n          name=\"nome\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"email\">\r\n        Email:\r\n        <InputForm\r\n          disabled\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"gender\" inputWidth=\"Gênero\">\r\n        Gênero:\r\n        <SelectForm value={gender} onChange={(e) => setGender(e.target.value)}>\r\n          <option\r\n            defaultChecked\r\n            hidden\r\n            value={gender}\r\n          >\r\n            {gender}\r\n          </option>\r\n          <option\r\n            value=\"Masculino\"\r\n          >\r\n            Masculino\r\n          </option>\r\n          <option\r\n            value=\"Feminino\"\r\n          >\r\n            Feminino\r\n          </option>\r\n          <option\r\n            value=\"Outro...\"\r\n          >\r\n            Outro...\r\n          </option>\r\n        </SelectForm>\r\n      </Label>\r\n      <Label htmlFor=\"cpf\" inputWidth=\"cpf\">\r\n        CPF:\r\n        <InputForm\r\n          disabled\r\n          type=\"text\"\r\n          name=\"cpf\"\r\n          value={cpf}\r\n          onChange={(e) => setCpf(e.target.value)}\r\n        />\r\n      </Label>\r\n      <ButtonSubmitForm onClick={(e) => handleSubmit(e)}>Salvar</ButtonSubmitForm>\r\n    </Form>\r\n  );\r\n}\r\n"],"names":["Form","styled","Label","darkRedColor","inputWidth","width","InputWidth","SelectForm","darkGrayColor","InputForm","ButtonSubmitForm","Profile","dispatch","useDispatch","user","useSelector","state","userInfo","name","setName","useState","email","setEmail","cpf","setCpf","password","setPassword","gender","setGender","htmlFor","type","value","onChange","e","target","disabled","defaultChecked","hidden","onClick","preventDefault","actionUser","userProfile","handleSubmit"],"sourceRoot":""}