{"version":3,"file":"static/js/779.d34762c5.chunk.js","mappings":"gMAOA,MAQaA,EAAOC,EAAAA,GAAAA,KAAW,mTAelBC,EAAYD,EAAAA,GAAAA,IAAU,iHAQtBE,EAAQF,EAAAA,GAAAA,IAAU,iLAIpBG,EAAAA,IAuBEC,GAjBaJ,EAAAA,GAAAA,OAAa,oTAafG,EAAAA,IAICH,EAAAA,GAAAA,MAAY,sQAE/B,QAAC,WAAEK,GAAY,QA5DDC,KAClB,OAAQA,GACN,IAAK,SAAU,MAAO,6BACtB,IAAK,SAAU,MAAO,8BACtB,QAAS,MAAO,eAAe,EAwDTC,CAAWF,EAAW,GAKjBG,EAAAA,GAIIL,EAAAA,KAItBM,EAAmBT,EAAAA,GAAAA,OAAa,iSAQ3BG,EAAAA,GAIIA,EAAAA,I,wBCpFP,SAASO,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASC,KAAKC,aACpDC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,MAC9BC,EAAeC,IAAmBF,EAAAA,EAAAA,UAAS,MAC3CG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAyBjC,OAvBAK,EAAAA,EAAAA,YAAU,KACJb,EAAQc,OAAS,GACnBP,EAAUP,EAAQ,GAAGM,QACrBI,EAAgBV,EAAQ,GAAGS,eAC3BG,EAAQZ,EAAQ,GAAGW,QAEnBJ,EAAU,IACVG,EAAgB,IAChBE,EAAQ,IACV,GACC,CAACZ,KAcF,SAACZ,EAAS,WACR,UAACF,EAAI,YACH,4BACE,UAACG,EAAK,CAAC0B,QAAQ,WAAU,UAAC,gBAExB,SAACxB,EAAS,CACRyB,KAAK,OACLC,KAAK,WACLC,MAAOZ,EACPa,SAAWC,GAAMb,EAAUa,EAAEC,OAAOH,aAGxC,UAAC7B,EAAK,CAAC0B,QAAQ,SAAQ,UAAC,cAEtB,SAACxB,EAAS,CACRC,WAAW,SACXwB,KAAK,OACLC,KAAK,SACLC,MAAOT,EACPU,SAAWC,GAAMV,EAAgBU,EAAEC,OAAOH,aAG9C,UAAC7B,EAAK,CAAC0B,QAAQ,SAAQ,UAAC,WAEtB,SAACxB,EAAS,CACRC,WAAW,SACXwB,KAAK,OACLC,KAAK,SACLC,MAAOP,EACPQ,SAAWC,GAAMR,EAAQQ,EAAEC,OAAOH,gBAIxC,SAACtB,EAAgB,CAAC0B,QAAUF,GA7ClC,SAAsBA,GACpBA,EAAEG,iBACFzB,EAAS0B,EAAAA,GAAuB,CAC9BC,YAAa,CACXnB,SACAG,gBACAE,UAGN,CAoCwCe,CAAaN,GAAG,SAAC,iBAI3D,C","sources":["Components/Form/address/styled.js","Components/Form/address/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport {\r\n  grayText, darkRedColor, yellowColor, darkBlueColor, lightGrayColor,\r\n  darkGrayColor,\r\n} from '../../../style/colors';\r\n\r\nconst InputWidth = (width) => {\r\n  switch (width) {\r\n    case 'numero': return 'width: 5%;min-width: 40px;';\r\n    case 'estado': return 'width: 5%;min-width: 250px;';\r\n    default: return 'width: 100%;';\r\n  }\r\n};\r\n\r\nexport const Form = styled.form`\r\n    margin-top : 5px ;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: auto;\r\n    min-height: 50vh;\r\n    padding: 10px;\r\n    div{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n    }\r\n    `;\r\nexport const Container = styled.div`\r\n   display: flex;\r\n   min-height: 100%;\r\n   width: 80vw;\r\n   justify-content: center;\r\n\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  width: auto;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: ${darkRedColor};\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n\r\n  `;\r\nexport const SelectForm = styled.select`\r\n  height: 30px;\r\n  width: 100%;\r\n  font-size: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  margin-top: 5px;\r\n  justify-content:center;\r\n  align-items: center;\r\n  text-align: left;\r\n  margin-left: 10px;\r\n\r\n  &:focus{\r\n    border: 1px solid ${darkRedColor};\r\n    outline: none;\r\n  }\r\n`;\r\nexport const InputForm = styled.input`\r\n    height: 30px;\r\n    ${({ inputWidth }) => InputWidth(inputWidth)}\r\n    padding-left: 5px;\r\n    margin-top: 5px;\r\n    border: none;\r\n    background: none;\r\n    border-bottom: 2px solid ${darkGrayColor};\r\n\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 2px solid ${darkRedColor};\r\n     }\r\n`;\r\n\r\nexport const ButtonSubmitForm = styled.button`\r\n    width: 250px;\r\n    height: 45px;\r\n    font-weight: bold;\r\n    border-style: none;\r\n    font-size: 15px;\r\n    border-radius: 15px;\r\n    margin-top: 10px;\r\n    background: ${darkRedColor};\r\n    color: #fff;\r\n    cursor: pointer;\r\n    :hover{\r\n        background: ${darkRedColor};\r\n    }\r\n`;\r\n","/* eslint-disable camelcase */\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Form, Label, InputForm, Container, ButtonSubmitForm,\r\n} from './styled';\r\nimport * as actionUser from '../../../store/modules/userInfo/actions';\r\n\r\nexport default function Address() {\r\n  const dispatch = useDispatch();\r\n  const address = useSelector((state) => state.userInfo.user.Addresses);\r\n  const [street, setStreet] = useState(' ');\r\n  const [street_number, setStreetNumber] = useState(' ');\r\n  const [city, setCity] = useState(' ');\r\n\r\n  useEffect(() => {\r\n    if (address.length > 0) {\r\n      setStreet(address[0].street);\r\n      setStreetNumber(address[0].street_number);\r\n      setCity(address[0].city);\r\n    } else {\r\n      setStreet('');\r\n      setStreetNumber('');\r\n      setCity('');\r\n    }\r\n  }, [address]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    dispatch(actionUser.userRequest({\r\n      userAddress: {\r\n        street,\r\n        street_number,\r\n        city,\r\n      },\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <div>\r\n          <Label htmlFor=\"endereco\">\r\n            Endereço:\r\n            <InputForm\r\n              type=\"text\"\r\n              name=\"endereco\"\r\n              value={street}\r\n              onChange={(e) => setStreet(e.target.value)}\r\n            />\r\n          </Label>\r\n          <Label htmlFor=\"numero\">\r\n            Número:\r\n            <InputForm\r\n              inputWidth=\"numero\"\r\n              type=\"text\"\r\n              name=\"numero\"\r\n              value={street_number}\r\n              onChange={(e) => setStreetNumber(e.target.value)}\r\n            />\r\n          </Label>\r\n          <Label htmlFor=\"estado\">\r\n            Estado:\r\n            <InputForm\r\n              inputWidth=\"estado\"\r\n              type=\"text\"\r\n              name=\"estado\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n          </Label>\r\n        </div>\r\n        <ButtonSubmitForm onClick={(e) => handleSubmit(e)}> Salvar </ButtonSubmitForm>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["Form","styled","Container","Label","darkRedColor","InputForm","inputWidth","width","InputWidth","darkGrayColor","ButtonSubmitForm","Address","dispatch","useDispatch","address","useSelector","state","userInfo","user","Addresses","street","setStreet","useState","street_number","setStreetNumber","city","setCity","useEffect","length","htmlFor","type","name","value","onChange","e","target","onClick","preventDefault","actionUser","userAddress","handleSubmit"],"sourceRoot":""}