{"version":3,"file":"static/js/539.c30b8994.chunk.js","mappings":"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","sources":["Components/Form/profile/styled.js","Components/Form/profile/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport {\r\n  grayText, darkRedColor, yellowColor, darkBlueColor, lightGrayColor,\r\n  darkGrayColor,\r\n} from '../../../style/colors';\r\n\r\nconst InputWidth = (width) => {\r\n  switch (width) {\r\n    case 'cpf': return 'width: 40%;';\r\n    case 'Gênero': return 'width: 40%;';\r\n    case 'password': return 'width: 50%;';\r\n    default: return 'width: 100%;';\r\n  }\r\n};\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin-top: 15px;\r\n    min-width: 100%;\r\n    min-height: 80%;\r\n    padding: 10px;\r\n`;\r\nexport const Container = styled.div`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: ${darkRedColor};\r\n  ${({ inputWidth }) => InputWidth(inputWidth)}\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin-right: 5px;\r\n  margin-left: 10px;\r\n  padding: 20px;\r\n  `;\r\nexport const SelectForm = styled.select`\r\n    height: 30px;\r\n    width: 80%;\r\n    padding-left: 5px;\r\n    margin-top: 5px;\r\n    border: none;\r\n    background: none;\r\n    border-bottom: 2px solid ${darkGrayColor};\r\n\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 2px solid ${darkRedColor};\r\n     }\r\n`;\r\nexport const InputForm = styled.input`\r\n    height: 30px;\r\n    width: 80%;\r\n    padding-left: 5px;\r\n    margin-top: 5px;\r\n    border: none;\r\n    background: none;\r\n    border-bottom: 2px solid ${darkGrayColor};\r\n\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 2px solid ${darkRedColor};\r\n     }\r\n`;\r\n\r\nexport const ButtonSubmitForm = styled.button`\r\n    width: 50%;\r\n    height: 55px;\r\n    font-weight: bold;\r\n    border-style: none;\r\n    font-size: 15px;\r\n    border-radius: 15px;\r\n    background: ${darkRedColor};\r\n    color: #fff;\r\n    position: relative;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    cursor: pointer;\r\n    :hover{\r\n        background: ${darkRedColor};\r\n    }\r\n`;\r\n","import { useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Form, Label, InputForm, SelectForm, ButtonSubmitForm,\r\n} from './styled';\r\nimport * as actionUser from '../../../store/modules/userInfo/actions';\r\n\r\nexport default function Profile() {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.userInfo);\r\n  const [name, setName] = useState(user.name);\r\n  const [email, setEmail] = useState(user.email);\r\n  const [cpf, setCpf] = useState(user.cpf);\r\n  const [password, setPassword] = useState(user.password);\r\n  const [gender, setGender] = useState(user.gender);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    dispatch(actionUser.userRequest({\r\n      userProfile: {\r\n        name,\r\n        email,\r\n        cpf,\r\n        password,\r\n        gender,\r\n      },\r\n    }));\r\n  }\r\n  return (\r\n    <Form>\r\n      <Label htmlFor=\"nome\">\r\n        Nome:\r\n        <InputForm\r\n          type=\"text\"\r\n          name=\"nome\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"email\">\r\n        Email:\r\n        <InputForm\r\n          disabled\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"gender\" inputWidth=\"Gênero\">\r\n        Gênero:\r\n        <SelectForm value={gender} onChange={(e) => setGender(e.target.value)}>\r\n          <option\r\n            defaultChecked\r\n            hidden\r\n            value={gender}\r\n          >\r\n            {gender}\r\n          </option>\r\n          <option\r\n            value=\"Masculino\"\r\n          >\r\n            Masculino\r\n          </option>\r\n          <option\r\n            value=\"Feminino\"\r\n          >\r\n            Feminino\r\n          </option>\r\n          <option\r\n            value=\"Outro...\"\r\n          >\r\n            Outro...\r\n          </option>\r\n        </SelectForm>\r\n      </Label>\r\n      <Label htmlFor=\"cpf\" inputWidth=\"cpf\">\r\n        CPF:\r\n        <InputForm\r\n          disabled\r\n          type=\"text\"\r\n          name=\"cpf\"\r\n          value={cpf}\r\n          onChange={(e) => setCpf(e.target.value)}\r\n        />\r\n      </Label>\r\n      <ButtonSubmitForm onClick={(e) => handleSubmit(e)}>Salvar</ButtonSubmitForm>\r\n    </Form>\r\n  );\r\n}\r\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Label","div","_templateObject2","label","_templateObject3","darkRedColor","_ref","width","InputWidth","inputWidth","SelectForm","select","_templateObject4","darkGrayColor","InputForm","input","_templateObject5","ButtonSubmitForm","button","_templateObject6","Profile","dispatch","useDispatch","user","useSelector","state","userInfo","_useState","useState","name","_useState2","_slicedToArray","setName","_useState3","email","_useState4","setEmail","_useState5","cpf","_useState6","setCpf","_useState7","password","_useState8","_useState9","gender","_useState10","setGender","_jsxs","children","htmlFor","_jsx","type","value","onChange","e","target","disabled","defaultChecked","hidden","onClick","preventDefault","actionUser","userProfile","handleSubmit"],"sourceRoot":""}