{"version":3,"file":"static/js/968.a5e2b936.chunk.js","mappings":"kRAQaA,EAAYC,EAAAA,GAAAA,IAAU,4KAStBC,EAAiBD,EAAAA,GAAAA,IAAU,gKAO3BE,EAAeF,EAAAA,GAAAA,IAAU,uLAQzBG,EAAQH,EAAAA,GAAAA,MAAY,8TAGLI,EAAAA,IAYfC,EAAOL,EAAAA,GAAAA,KAAW,sIAQlBM,EAAmBN,EAAAA,GAAAA,OAAa,sTAS3BI,EAAAA,GAIIA,EAAAA,IAGTG,EAAiBP,EAAAA,GAAAA,IAAU,yK,8BC1DzB,SAASQ,IACtB,IACMC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASC,KAAKL,KAAK,IACzDM,GAAOJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASC,IAAI,IAAjDC,GACFC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,YAAU,eAA7BC,EAAK,KAAEC,EAAQ,KACtB,GAAoCF,EAAAA,EAAAA,UAASR,GAAS,eAA/CW,EAAU,KAAEC,EAAa,KAC1BC,GAAcC,EAAAA,EAAAA,QAAO,MAuBA,aAsB1B,OAtB0B,0BAA3B,WAA4BC,GAAC,4EAIO,OAHlCA,EAAEC,iBACIC,EAAW,IAAIC,SAAW,EAAD,OAE7BD,EAASE,OAAO,QAASV,GAAO,SAC1BW,IAAAA,KAAW,GAAD,OAAIC,EAAAA,GAAcJ,EAAU,CAC1CK,OAAQ,SACPC,MAAK,SAACC,GACP,IAAMC,EAAY,CAChBC,KAAMF,EAAIE,KAAKA,KACfJ,OAAQtB,EAAW,MAAQ,OAC3BK,GAAAA,GAEFC,EAASqB,EAAAA,GAAuBF,GAClC,IAAG,KAAD,EAEFG,EAAAA,GAAAA,QAAc,YAChB,gDAEEA,EAAAA,GAAAA,MAAY,qBACZC,QAAQC,IAAI,EAAD,IAAM,0DAEpB,sBACD,OA5CAC,EAAAA,EAAAA,YAAU,WACM,OAAb/B,GAA8C,KAAzBA,EAASgC,YAC3BpB,EAVe,iFAWfA,EAAcZ,EAASgC,aAAehC,EAC5C,GAAG,KAyCD,SAACV,EAAS,WACR,SAACM,EAAI,WACH,UAACE,EAAc,YACb,SAACN,EAAc,WACb,SAACC,EAAY,CACXwC,IAAKtB,EACLuB,IAAI,mBAGR,UAACxC,EAAK,CACJyC,QAAQ,OACRC,eAAgB,WAjDxBvB,EAAYwB,QAAQC,OAiDuB,EAAC,UAEnC7B,EAAQA,EAAM8B,KAAO,QACtB,kBACEC,KAAK,OACLD,KAAK,OACLE,OAAO,wBACPC,IAAK7B,EACL8B,SAAU,SAAC5B,GAAC,OAtDxB,SAAuBA,GACrB,IAAM6B,EAAS,IAAIC,WACbC,EAAW/B,EAAEgC,OAAOC,MAAM,IAC3BF,GAAYA,EAASG,OAAS,IACnCvC,EAASoC,GACTF,EAAOM,OAAS,WACdtC,EAAcgC,EAAOO,OACvB,EACAP,EAAOQ,cAAcN,GACvB,CA6C6BO,CAActC,EAAE,QAGrC,SAAClB,EAAgB,CAACyD,QAAS,SAACvC,GAAC,OAhDpC,SAE2B,GAAD,+BA8CewC,CAAaxC,EAAE,EAAC,SAAC,mBAK7D,C","sources":["Components/Form/photo/style.js","Components/Form/photo/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nimport {\n  grayText, darkRedColor, yellowColor, darkBlueColor, lightGrayColor,\n  darkGrayColor,\n} from '../../../style/colors';\n\nexport const Container = styled.div`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 80vw;\n        margin-bottom: 15px;\n      \n`;\n\nexport const ImageContainer = styled.div`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 80%;\n        margin-top: 10px;\n`;\nexport const ImageProfile = styled.img`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 30%;\n        min-width: 200px;\n        height: auto;\n`;\nexport const Label = styled.label`\n        display: block;\n        padding: 15px 70px;\n        background-color: ${darkRedColor};\n        border-radius: 10px;\n        color:  #fff;\n        text-align: center;\n        width: auto;\n        margin-top: 10px;\n         cursor: pointer;\n\n         input {\n        display: none;\n    }\n`;\nexport const Form = styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 80%;\nwidth: 100vmin;\npadding: 5px;\n`;\nexport const ButtonSubmitForm = styled.button`\n    width: 15%;\n    min-width: 100px;\n    height: 50px;\n    font-weight: bold;\n    border-style: none;\n    font-size: 15px;\n    border-radius: 15px;\n    margin-top: 20px;\n    background: ${darkRedColor};\n    color: #fff;\n    cursor: pointer;\n    :hover{\n        background: ${darkRedColor};\n    }\n`;\nexport const PhotoContainer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-direction:  column;\n    height: 30%;\n    width: 30%;\n`;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable no-useless-return */\nimport { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport {\n  PhotoContainer, ImageProfile, Label, ImageContainer, ButtonSubmitForm, Form,\n  Container,\n} from './style';\nimport * as actionUser from '../../../store/modules/userInfo/actions';\nimport urlStorage from '../../../services/urlStoragePhoto';\n\nexport default function Photo() {\n  const defaultPhoto = 'https://digimedia.web.ua.pt/wp-content/uploads/2017/05/default-user-image.png';\n  const photoImg = useSelector((state) => state.userInfo.user.Photo);\n  const { id } = useSelector((state) => state.userInfo.user);\n  const dispatch = useDispatch();\n  const [photo, setPhoto] = useState();\n  const [profilePic, setProfilePic] = useState(photoImg);\n  const hiddenInput = useRef(null);\n\n  useEffect(() => {\n    (photoImg === null || photoImg.display_url === '')\n      ? setProfilePic(defaultPhoto)\n      : setProfilePic(photoImg.display_url || photoImg);\n  }, []);\n\n  function handleClick() {\n    hiddenInput.current.click();\n  }\n\n  function validateImage(e) {\n    const reader = new FileReader();\n    const imagePic = e.target.files[0];\n    if (!imagePic || imagePic.length > 0) return;\n    setPhoto(imagePic);\n    reader.onload = () => {\n      setProfilePic(reader.result);\n    };\n    reader.readAsDataURL(imagePic);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    try {\n      formData.append('image', photo);\n      await axios.post(`${urlStorage}`, formData, {\n        method: 'POST',\n      }).then((res) => {\n        const userPhoto = {\n          data: res.data.data,\n          method: photoImg ? 'put' : 'post',\n          id,\n        };\n        dispatch(actionUser.userRequest(userPhoto));\n      });\n\n      toast.success('SUCCESS!');\n    //   alert('Usu√°rio criado com sucesso!');\n    } catch (err) {\n      toast.error('FAIULURE REGISTER');\n      console.log(err);\n    }\n  }\n  return (\n    <Container>\n      <Form>\n        <PhotoContainer>\n          <ImageContainer>\n            <ImageProfile\n              src={profilePic}\n              alt=\"foto perfil\"\n            />\n          </ImageContainer>\n          <Label\n            htmlFor=\"foto\"\n            onClickCapture={() => handleClick()}\n          >\n            {photo ? photo.name : 'File' }\n            <input\n              type=\"file\"\n              name=\"foto\"\n              accept=\"image/png, image/jpeg\"\n              ref={hiddenInput}\n              onChange={(e) => validateImage(e)}\n            />\n          </Label>\n          <ButtonSubmitForm onClick={(e) => handleSubmit(e)}> Salvar </ButtonSubmitForm>\n        </PhotoContainer>\n      </Form>\n    </Container>\n  );\n}\n"],"names":["Container","styled","ImageContainer","ImageProfile","Label","darkRedColor","Form","ButtonSubmitForm","PhotoContainer","Photo","photoImg","useSelector","state","userInfo","user","id","dispatch","useDispatch","useState","photo","setPhoto","profilePic","setProfilePic","hiddenInput","useRef","e","preventDefault","formData","FormData","append","axios","urlStorage","method","then","res","userPhoto","data","actionUser","toast","console","log","useEffect","display_url","src","alt","htmlFor","onClickCapture","current","click","name","type","accept","ref","onChange","reader","FileReader","imagePic","target","files","length","onload","result","readAsDataURL","validateImage","onClick","handleSubmit"],"sourceRoot":""}