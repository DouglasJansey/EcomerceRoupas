{"version":3,"file":"static/js/779.f659377a.chunk.js","mappings":"8NAeaA,EAAOC,EAAAA,GAAAA,KAAH,mTAeJC,EAAYD,EAAAA,GAAAA,IAAH,iHAQTE,EAAQF,EAAAA,GAAAA,IAAH,iLAIPG,EAAAA,IAuBEC,GAjBaJ,EAAAA,GAAAA,OAAH,oTAaCG,EAAAA,IAICH,EAAAA,GAAAA,MAAH,sQAEhB,mBA5Da,SAACK,GAClB,OAAQA,GACN,IAAK,SAAU,MAAO,6BACtB,IAAK,SAAU,MAAO,8BACtB,QAAS,MAAO,eAEnB,CAsDyBC,CAApB,EAAGC,WAAH,GAKyBC,EAAAA,GAIIL,EAAAA,KAItBM,EAAmBT,EAAAA,GAAAA,OAAH,iSAQXG,EAAAA,GAIIA,EAAAA,I,oBCpFP,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,KAAKC,SAA/B,IAC5B,GAA4BC,EAAAA,EAAAA,UAAS,KAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAyCF,EAAAA,EAAAA,UAAS,KAAlD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,KAAjC,eAAOK,EAAP,KAAaC,EAAb,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACJb,EAAQc,OAAS,GACnBN,EAAUR,EAAQ,GAAGO,QACrBG,EAAgBV,EAAQ,GAAGS,eAC3BG,EAAQZ,EAAQ,GAAGW,QAEnBH,EAAU,IACVE,EAAgB,IAChBE,EAAQ,IAEX,GAAE,CAACZ,KAcF,SAACZ,EAAD,WACE,UAACF,EAAD,YACE,4BACE,UAACG,EAAD,CAAO0B,QAAQ,WAAf,0BAEE,SAACxB,EAAD,CACEyB,KAAK,OACLC,KAAK,WACLC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAUY,EAAEC,OAAOH,MAA1B,QAGd,UAAC7B,EAAD,CAAO0B,QAAQ,SAAf,wBAEE,SAACxB,EAAD,CACEG,WAAW,SACXsB,KAAK,OACLC,KAAK,SACLC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAgBU,EAAEC,OAAOH,MAAhC,QAGd,UAAC7B,EAAD,CAAO0B,QAAQ,SAAf,qBAEE,SAACxB,EAAD,CACEG,WAAW,SACXsB,KAAK,OACLC,KAAK,SACLC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAQQ,EAAEC,OAAOH,MAAxB,WAIhB,SAACtB,EAAD,CAAkB0B,QAAS,SAACF,GAAD,OA7CjC,SAAsBA,GACpBA,EAAEG,iBACFzB,EAAS0B,EAAAA,GAAuB,CAC9BC,YAAa,CACXlB,OAAAA,EACAE,cAAAA,EACAE,KAAAA,KAGL,CAoCuCe,CAAaN,EAApB,EAA3B,0BAIP,C","sources":["Components/Form/address/styled.js","Components/Form/address/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\nimport {\n  grayText, darkRedColor, yellowColor, darkBlueColor, lightGrayColor,\n  darkGrayColor,\n} from '../../../style/colors';\n\nconst InputWidth = (width) => {\n  switch (width) {\n    case 'numero': return 'width: 5%;min-width: 40px;';\n    case 'estado': return 'width: 5%;min-width: 250px;';\n    default: return 'width: 100%;';\n  }\n};\n\nexport const Form = styled.form`\n    margin-top : 5px ;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    min-height: 50vh;\n    padding: 10px;\n    div{\n        display: flex;\n        flex-wrap: wrap;\n        width: 100%;\n    }\n    `;\nexport const Container = styled.div`\n   display: flex;\n   min-height: 100%;\n   width: 80vw;\n   justify-content: center;\n\n`;\n\nexport const Label = styled.div`\n  width: auto;\n  font-weight: bold;\n  font-size: 15px;\n  color: ${darkRedColor};\n  justify-content: flex-start;\n  align-items: center;\n  margin-top: 10px;\n\n  `;\nexport const SelectForm = styled.select`\n  height: 30px;\n  width: 100%;\n  font-size: 15px;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  margin-top: 5px;\n  justify-content:center;\n  align-items: center;\n  text-align: left;\n  margin-left: 10px;\n\n  &:focus{\n    border: 1px solid ${darkRedColor};\n    outline: none;\n  }\n`;\nexport const InputForm = styled.input`\n    height: 30px;\n    ${({ inputWidth }) => InputWidth(inputWidth)}\n    padding-left: 5px;\n    margin-top: 5px;\n    border: none;\n    background: none;\n    border-bottom: 2px solid ${darkGrayColor};\n\n    &:focus{\n        outline: none;\n        border-bottom: 2px solid ${darkRedColor};\n     }\n`;\n\nexport const ButtonSubmitForm = styled.button`\n    width: 250px;\n    height: 45px;\n    font-weight: bold;\n    border-style: none;\n    font-size: 15px;\n    border-radius: 15px;\n    margin-top: 10px;\n    background: ${darkRedColor};\n    color: #fff;\n    cursor: pointer;\n    :hover{\n        background: ${darkRedColor};\n    }\n`;\n","/* eslint-disable camelcase */\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Form, Label, InputForm, Container, ButtonSubmitForm,\n} from './styled';\nimport * as actionUser from '../../../store/modules/userInfo/actions';\n\nexport default function Address() {\n  const dispatch = useDispatch();\n  const address = useSelector((state) => state.userInfo.user.Addresses);\n  const [street, setStreet] = useState(' ');\n  const [street_number, setStreetNumber] = useState(' ');\n  const [city, setCity] = useState(' ');\n\n  useEffect(() => {\n    if (address.length > 0) {\n      setStreet(address[0].street);\n      setStreetNumber(address[0].street_number);\n      setCity(address[0].city);\n    } else {\n      setStreet('');\n      setStreetNumber('');\n      setCity('');\n    }\n  }, [address]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(actionUser.userRequest({\n      userAddress: {\n        street,\n        street_number,\n        city,\n      },\n    }));\n  }\n\n  return (\n    <Container>\n      <Form>\n        <div>\n          <Label htmlFor=\"endereco\">\n            Endereço:\n            <InputForm\n              type=\"text\"\n              name=\"endereco\"\n              value={street}\n              onChange={(e) => setStreet(e.target.value)}\n            />\n          </Label>\n          <Label htmlFor=\"numero\">\n            Número:\n            <InputForm\n              inputWidth=\"numero\"\n              type=\"text\"\n              name=\"numero\"\n              value={street_number}\n              onChange={(e) => setStreetNumber(e.target.value)}\n            />\n          </Label>\n          <Label htmlFor=\"estado\">\n            Estado:\n            <InputForm\n              inputWidth=\"estado\"\n              type=\"text\"\n              name=\"estado\"\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n            />\n          </Label>\n        </div>\n        <ButtonSubmitForm onClick={(e) => handleSubmit(e)}> Salvar </ButtonSubmitForm>\n      </Form>\n    </Container>\n  );\n}\n"],"names":["Form","styled","Container","Label","darkRedColor","InputForm","width","InputWidth","inputWidth","darkGrayColor","ButtonSubmitForm","Address","dispatch","useDispatch","address","useSelector","state","userInfo","user","Addresses","useState","street","setStreet","street_number","setStreetNumber","city","setCity","useEffect","length","htmlFor","type","name","value","onChange","e","target","onClick","preventDefault","actionUser","userAddress","handleSubmit"],"sourceRoot":""}