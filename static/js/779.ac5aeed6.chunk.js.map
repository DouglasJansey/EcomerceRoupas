{"version":3,"file":"static/js/779.ac5aeed6.chunk.js","mappings":"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","sources":["Components/Form/address/styled.js","Components/Form/address/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport {\r\n  grayText, darkRedColor, yellowColor, darkBlueColor, lightGrayColor,\r\n  darkGrayColor,\r\n} from '../../../style/colors';\r\n\r\nconst InputWidth = (width) => {\r\n  switch (width) {\r\n    case 'numero': return 'width: 5%;min-width: 40px;';\r\n    case 'estado': return 'width: 5%;min-width: 250px;';\r\n    default: return 'width: 100%;';\r\n  }\r\n};\r\n\r\nexport const Form = styled.form`\r\n    margin-top : 5px ;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: auto;\r\n    min-height: 50vh;\r\n    padding: 10px;\r\n    div{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n    }\r\n    `;\r\nexport const Container = styled.div`\r\n   display: flex;\r\n   min-height: 100%;\r\n   width: 80vw;\r\n   justify-content: center;\r\n\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  width: auto;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: ${darkRedColor};\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n\r\n  `;\r\nexport const SelectForm = styled.select`\r\n  height: 30px;\r\n  width: 100%;\r\n  font-size: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  margin-top: 5px;\r\n  justify-content:center;\r\n  align-items: center;\r\n  text-align: left;\r\n  margin-left: 10px;\r\n\r\n  &:focus{\r\n    border: 1px solid ${darkRedColor};\r\n    outline: none;\r\n  }\r\n`;\r\nexport const InputForm = styled.input`\r\n    height: 30px;\r\n    ${({ inputWidth }) => InputWidth(inputWidth)}\r\n    padding-left: 5px;\r\n    margin-top: 5px;\r\n    border: none;\r\n    background: none;\r\n    border-bottom: 2px solid ${darkGrayColor};\r\n\r\n    &:focus{\r\n        outline: none;\r\n        border-bottom: 2px solid ${darkRedColor};\r\n     }\r\n`;\r\n\r\nexport const ButtonSubmitForm = styled.button`\r\n    width: 250px;\r\n    height: 45px;\r\n    font-weight: bold;\r\n    border-style: none;\r\n    font-size: 15px;\r\n    border-radius: 15px;\r\n    margin-top: 10px;\r\n    background: ${darkRedColor};\r\n    color: #fff;\r\n    cursor: pointer;\r\n    :hover{\r\n        background: ${darkRedColor};\r\n    }\r\n`;\r\n","/* eslint-disable camelcase */\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Form, Label, InputForm, Container, ButtonSubmitForm,\r\n} from './styled';\r\nimport * as actionUser from '../../../store/modules/userInfo/actions';\r\n\r\nexport default function Address() {\r\n  const dispatch = useDispatch();\r\n  const address = useSelector((state) => state.userInfo.user.Addresses);\r\n  const [street, setStreet] = useState(' ');\r\n  const [street_number, setStreetNumber] = useState(' ');\r\n  const [city, setCity] = useState(' ');\r\n\r\n  useEffect(() => {\r\n    if (address.length > 0) {\r\n      setStreet(address[0].street);\r\n      setStreetNumber(address[0].street_number);\r\n      setCity(address[0].city);\r\n    } else {\r\n      setStreet('');\r\n      setStreetNumber('');\r\n      setCity('');\r\n    }\r\n  }, [address]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    dispatch(actionUser.userRequest({\r\n      userAddress: {\r\n        street,\r\n        street_number,\r\n        city,\r\n      },\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <div>\r\n          <Label htmlFor=\"endereco\">\r\n            Endereço:\r\n            <InputForm\r\n              type=\"text\"\r\n              name=\"endereco\"\r\n              value={street}\r\n              onChange={(e) => setStreet(e.target.value)}\r\n            />\r\n          </Label>\r\n          <Label htmlFor=\"numero\">\r\n            Número:\r\n            <InputForm\r\n              inputWidth=\"numero\"\r\n              type=\"text\"\r\n              name=\"numero\"\r\n              value={street_number}\r\n              onChange={(e) => setStreetNumber(e.target.value)}\r\n            />\r\n          </Label>\r\n          <Label htmlFor=\"estado\">\r\n            Estado:\r\n            <InputForm\r\n              inputWidth=\"estado\"\r\n              type=\"text\"\r\n              name=\"estado\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n          </Label>\r\n        </div>\r\n        <ButtonSubmitForm onClick={(e) => handleSubmit(e)}> Salvar </ButtonSubmitForm>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","Label","_templateObject3","darkRedColor","InputForm","select","_templateObject4","input","_templateObject5","_ref","width","InputWidth","inputWidth","darkGrayColor","ButtonSubmitForm","button","_templateObject6","Address","dispatch","useDispatch","address","useSelector","state","userInfo","user","Addresses","_useState","useState","_useState2","_slicedToArray","street","setStreet","_useState3","_useState4","street_number","setStreetNumber","_useState5","_useState6","city","setCity","useEffect","length","_jsx","children","_jsxs","htmlFor","type","name","value","onChange","e","target","onClick","preventDefault","actionUser","userAddress","handleSubmit"],"sourceRoot":""}