{"version":3,"file":"static/js/656.36bb87dc.chunk.js","mappings":"+NAgBaA,EAAOC,EAAAA,GAAAA,KAAW,mLASlBC,EAAeD,EAAAA,GAAAA,IAAU,4JASzBE,EAAYF,EAAAA,GAAAA,IAAU,sIAStBG,EAAQH,EAAAA,GAAAA,IAAU,iMAKpBI,EAAAA,IAOEC,EAAYL,EAAAA,GAAAA,MAAY,oOAEjC,YAAa,OAlDE,SAACM,GAClB,OAAQA,GACN,IAAK,UACL,IAAK,WAAY,MAAO,+BACxB,IAAK,MAAO,MAAO,eACnB,QAAS,MAAO,eAEpB,CA2CwBC,CAAP,EAAVC,WAAuC,GAQtBJ,EAAAA,IAKXK,EAAmBT,EAAAA,GAAAA,OAAa,+UAO3BI,EAAAA,GAQIA,EAAAA,I,oBC5EP,SAASM,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASC,KAAKC,MAAM,IACzDC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,KAAI,eAAhCC,EAAO,KAAEC,EAAM,KACtB,GAAkCF,EAAAA,EAAAA,UAAS,KAAI,eAAxCG,EAAU,KAAEC,EAAW,KAC9B,GAAiCJ,EAAAA,EAAAA,UAAS,KAAI,eAAvCK,EAAS,KAAEC,EAAW,KAC7B,GAAuCN,EAAAA,EAAAA,UAAS,KAAI,eAA7CO,EAAY,KAAEC,EAAc,KAuBnC,OArBAC,EAAAA,EAAAA,YAAU,WACJjB,EAAMkB,OAAS,IACbT,GAASC,EAAOV,EAAM,GAAGS,SACzBE,GAAYC,EAAYZ,EAAM,GAAGW,YACjCE,GAAWC,EAAYd,EAAM,GAAGa,WAChCE,GAAcC,EAAehB,EAAM,GAAGe,cAE9C,GAAG,CAACf,KAeF,SAACV,EAAY,WACX,UAACF,EAAI,YACH,UAACG,EAAS,YACR,UAACC,EAAK,CAAC2B,QAAQ,MAAK,UAAC,QAEnB,SAACzB,EAAS,CACRG,WAAW,MACXuB,KAAK,OACLC,KAAK,MACLC,MAAOb,EACPc,SAAU,SAACC,GAAC,OAAKd,EAAOc,EAAEC,OAAOH,MAAM,QAG3C,UAAC9B,EAAK,CAAC2B,QAAQ,UAAS,UAAC,YAEvB,SAACzB,EAAS,CACRG,WAAW,UACXuB,KAAK,OACLC,KAAK,UACLC,MAAOX,EACPY,SAAU,SAACC,GAAC,OAAKZ,EAAYY,EAAEC,OAAOH,MAAM,WAIlD,UAAC/B,EAAS,YACR,UAACC,EAAK,CAAC2B,QAAQ,MAAK,UAAC,QAEnB,SAACzB,EAAS,CACRG,WAAW,MACXuB,KAAK,OACLC,KAAK,MACLC,MAAOT,GAAa,IACpBU,SAAU,SAACC,GAAC,OAAKV,EAAYU,EAAEC,OAAOH,MAAM,QAGhD,UAAC9B,EAAK,CAAC2B,QAAQ,WAAU,UAAC,aAExB,SAACzB,EAAS,CACRG,WAAW,WACXuB,KAAK,OACLC,KAAK,WACLC,MAAOP,GAAgB,IACvBQ,SAAU,SAACC,GAAC,OAAKR,EAAeQ,EAAEC,OAAOH,MAAM,WAIrD,SAACxB,EAAgB,CAAC4B,QAAS,SAACF,GAAC,OA3DnC,SAAsBA,GACpBA,EAAEG,iBACFC,QAAQC,IAAI,OACZvB,EAASwB,EAAAA,GAAuB,CAC9BC,UAAW,CACTtB,QAAAA,EACAE,WAAAA,EACAE,UAAAA,EACAE,aAAAA,KAGN,CAgDwCiB,CAAaR,EAAE,EAAC,SAAC,iBAI3D,C","sources":["Components/Form/phone/styled.js","Components/Form/phone/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\nimport {\n  grayText, darkRedColor, yellowColor, darkBlueColor, lightGrayColor,\n  darkGrayColor,\n} from '../../../style/colors';\n\nconst InputWidth = (width) => {\n  switch (width) {\n    case 'celular': return 'width: 50%;min-width: 100px;';\n    case 'telefone': return 'width: 50%;min-width: 100px;';\n    case 'ddd': return 'width: 30px;';\n    default: return 'width: 100%;';\n  }\n};\n\nexport const Form = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 50vh;\n    padding: 10px;\n`;\nexport const SubContainer = styled.div`\n   display: flex;\n   margin-top: 10px;\n   height: 100%;\n   width: 80vw;\n   justify-content: center;\n   align-items: center;\n\n`;\nexport const Container = styled.div`\n   display: flex;\n   height: auto;\n   width: 100%;\n   justify-content: center;\n   align-items: center;\n\n`;\n\nexport const Label = styled.div`\n  display: flex;\n  font-weight: bold;\n  font-size: 15px;\n  width: auto;\n  color: ${darkRedColor};\n  justify-content: center;\n  align-items: center;\n  margin-top: 15px;\n\n    `;\n\nexport const InputForm = styled.input`\n  height: 30px;\n  ${({ inputWidth }) => InputWidth(inputWidth)};\n  font-size: 15px;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  margin-top: 5px;\n  margin-left: 5px;\n\n  &:focus{\n    border: 1px solid ${darkRedColor};\n    outline: none;\n  }\n`;\n\nexport const ButtonSubmitForm = styled.button`\n    width: 50%;\n    height: 45px;\n    font-weight: bold;\n    border-style: none;\n    font-size: 15px;\n    border-radius: 15px;\n    background: ${darkRedColor};\n    color: #fff;\n    margin-top: 10px;\n    cursor: pointer;\n    left: 0;\n    right: 0;\n    margin: auto;\n    :hover{\n        background: ${darkRedColor};\n    }\n`;\n","/* eslint-disable camelcase */\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport InputMask from '../../../Util';\nimport {\n  Form, Label, InputForm, Container, ButtonSubmitForm, SubContainer,\n} from './styled';\nimport * as actionUser from '../../../store/modules/userInfo/actions';\n\nexport default function Phone() {\n  const phone = useSelector((state) => state.userInfo.user.Phones);\n  const dispatch = useDispatch();\n  const [ddd_cel, setDdd] = useState(' ');\n  const [cel_number, setCelPhone] = useState(' ');\n  const [ddd_phone, setDddPhone] = useState(' ');\n  const [phone_number, setPhoneNumber] = useState(' ');\n\n  useEffect(() => {\n    if (phone.length > 0) {\n      if (ddd_cel) setDdd(phone[0].ddd_cel);\n      if (cel_number) setCelPhone(phone[0].cel_number);\n      if (ddd_phone) setDddPhone(phone[0].ddd_phone);\n      if (phone_number) setPhoneNumber(phone[0].phone_number);\n    }\n  }, [phone]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log('foi');\n    dispatch(actionUser.userRequest({\n      userPhone: {\n        ddd_cel,\n        cel_number,\n        ddd_phone,\n        phone_number,\n      },\n    }));\n  }\n  return (\n    <SubContainer>\n      <Form>\n        <Container>\n          <Label htmlFor=\"ddd\">\n            DDD:\n            <InputForm\n              inputWidth=\"ddd\"\n              type=\"text\"\n              name=\"ddd\"\n              value={ddd_cel}\n              onChange={(e) => setDdd(e.target.value)}\n            />\n          </Label>\n          <Label htmlFor=\"celular\">\n            Celular:\n            <InputForm\n              inputWidth=\"celular\"\n              type=\"text\"\n              name=\"celular\"\n              value={cel_number}\n              onChange={(e) => setCelPhone(e.target.value)}\n            />\n          </Label>\n        </Container>\n        <Container>\n          <Label htmlFor=\"ddd\">\n            DDD:\n            <InputForm\n              inputWidth=\"ddd\"\n              type=\"text\"\n              name=\"ddd\"\n              value={ddd_phone || ' '}\n              onChange={(e) => setDddPhone(e.target.value)}\n            />\n          </Label>\n          <Label htmlFor=\"telefone\">\n            Telefone:\n            <InputForm\n              inputWidth=\"telefone\"\n              type=\"text\"\n              name=\"telefone\"\n              value={phone_number || ' '}\n              onChange={(e) => setPhoneNumber(e.target.value)}\n            />\n          </Label>\n        </Container>\n        <ButtonSubmitForm onClick={(e) => handleSubmit(e)}> Salvar </ButtonSubmitForm>\n      </Form>\n    </SubContainer>\n  );\n}\n"],"names":["Form","styled","SubContainer","Container","Label","darkRedColor","InputForm","width","InputWidth","inputWidth","ButtonSubmitForm","Phone","phone","useSelector","state","userInfo","user","Phones","dispatch","useDispatch","useState","ddd_cel","setDdd","cel_number","setCelPhone","ddd_phone","setDddPhone","phone_number","setPhoneNumber","useEffect","length","htmlFor","type","name","value","onChange","e","target","onClick","preventDefault","console","log","actionUser","userPhone","handleSubmit"],"sourceRoot":""}