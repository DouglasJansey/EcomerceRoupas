{"version":3,"file":"static/js/656.36bb87dc.chunk.js","mappings":"+NAgBaA,EAAOC,EAAAA,GAAAA,KAAW,mLASlBC,EAAeD,EAAAA,GAAAA,IAAU,4JASzBE,EAAYF,EAAAA,GAAAA,IAAU,sIAStBG,EAAQH,EAAAA,GAAAA,IAAU,iMAKpBI,EAAAA,IAOEC,EAAYL,EAAAA,GAAAA,MAAY,oOAEjC,YAAa,OAlDE,SAACM,GAClB,OAAQA,GACN,IAAK,UACL,IAAK,WAAY,MAAO,+BACxB,IAAK,MAAO,MAAO,eACnB,QAAS,MAAO,eAEpB,CA2CwBC,CAAP,EAAVC,WAAuC,GAQtBJ,EAAAA,IAKXK,EAAmBT,EAAAA,GAAAA,OAAa,+UAO3BI,EAAAA,GAQIA,EAAAA,I,oBC5EP,SAASM,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASC,KAAKC,MAAM,IACzDC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,KAAI,eAAhCC,EAAO,KAAEC,EAAM,KACtB,GAAkCF,EAAAA,EAAAA,UAAS,KAAI,eAAxCG,EAAU,KAAEC,EAAW,KAC9B,GAAiCJ,EAAAA,EAAAA,UAAS,KAAI,eAAvCK,EAAS,KAAEC,EAAW,KAC7B,GAAuCN,EAAAA,EAAAA,UAAS,KAAI,eAA7CO,EAAY,KAAEC,EAAc,KAuBnC,OArBAC,EAAAA,EAAAA,YAAU,WACJjB,EAAMkB,OAAS,IACbT,GAASC,EAAOV,EAAM,GAAGS,SACzBE,GAAYC,EAAYZ,EAAM,GAAGW,YACjCE,GAAWC,EAAYd,EAAM,GAAGa,WAChCE,GAAcC,EAAehB,EAAM,GAAGe,cAE9C,GAAG,CAACf,KAeF,SAACV,EAAY,WACX,UAACF,EAAI,YACH,UAACG,EAAS,YACR,UAACC,EAAK,CAAC2B,QAAQ,MAAK,UAAC,QAEnB,SAACzB,EAAS,CACRG,WAAW,MACXuB,KAAK,OACLC,KAAK,MACLC,MAAOb,EACPc,SAAU,SAACC,GAAC,OAAKd,EAAOc,EAAEC,OAAOH,MAAM,QAG3C,UAAC9B,EAAK,CAAC2B,QAAQ,UAAS,UAAC,YAEvB,SAACzB,EAAS,CACRG,WAAW,UACXuB,KAAK,OACLC,KAAK,UACLC,MAAOX,EACPY,SAAU,SAACC,GAAC,OAAKZ,EAAYY,EAAEC,OAAOH,MAAM,WAIlD,UAAC/B,EAAS,YACR,UAACC,EAAK,CAAC2B,QAAQ,MAAK,UAAC,QAEnB,SAACzB,EAAS,CACRG,WAAW,MACXuB,KAAK,OACLC,KAAK,MACLC,MAAOT,GAAa,IACpBU,SAAU,SAACC,GAAC,OAAKV,EAAYU,EAAEC,OAAOH,MAAM,QAGhD,UAAC9B,EAAK,CAAC2B,QAAQ,WAAU,UAAC,aAExB,SAACzB,EAAS,CACRG,WAAW,WACXuB,KAAK,OACLC,KAAK,WACLC,MAAOP,GAAgB,IACvBQ,SAAU,SAACC,GAAC,OAAKR,EAAeQ,EAAEC,OAAOH,MAAM,WAIrD,SAACxB,EAAgB,CAAC4B,QAAS,SAACF,GAAC,OA3DnC,SAAsBA,GACpBA,EAAEG,iBACFC,QAAQC,IAAI,OACZvB,EAASwB,EAAAA,GAAuB,CAC9BC,UAAW,CACTtB,QAAAA,EACAE,WAAAA,EACAE,UAAAA,EACAE,aAAAA,KAGN,CAgDwCiB,CAAaR,EAAE,EAAC,SAAC,iBAI3D,C","sources":["Components/Form/phone/styled.js","Components/Form/phone/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport {\r\n  grayText, darkRedColor, yellowColor, darkBlueColor, lightGrayColor,\r\n  darkGrayColor,\r\n} from '../../../style/colors';\r\n\r\nconst InputWidth = (width) => {\r\n  switch (width) {\r\n    case 'celular': return 'width: 50%;min-width: 100px;';\r\n    case 'telefone': return 'width: 50%;min-width: 100px;';\r\n    case 'ddd': return 'width: 30px;';\r\n    default: return 'width: 100%;';\r\n  }\r\n};\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 50vh;\r\n    padding: 10px;\r\n`;\r\nexport const SubContainer = styled.div`\r\n   display: flex;\r\n   margin-top: 10px;\r\n   height: 100%;\r\n   width: 80vw;\r\n   justify-content: center;\r\n   align-items: center;\r\n\r\n`;\r\nexport const Container = styled.div`\r\n   display: flex;\r\n   height: auto;\r\n   width: 100%;\r\n   justify-content: center;\r\n   align-items: center;\r\n\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  display: flex;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  width: auto;\r\n  color: ${darkRedColor};\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n\r\n    `;\r\n\r\nexport const InputForm = styled.input`\r\n  height: 30px;\r\n  ${({ inputWidth }) => InputWidth(inputWidth)};\r\n  font-size: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  margin-top: 5px;\r\n  margin-left: 5px;\r\n\r\n  &:focus{\r\n    border: 1px solid ${darkRedColor};\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const ButtonSubmitForm = styled.button`\r\n    width: 50%;\r\n    height: 45px;\r\n    font-weight: bold;\r\n    border-style: none;\r\n    font-size: 15px;\r\n    border-radius: 15px;\r\n    background: ${darkRedColor};\r\n    color: #fff;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    :hover{\r\n        background: ${darkRedColor};\r\n    }\r\n`;\r\n","/* eslint-disable camelcase */\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InputMask from '../../../Util';\r\nimport {\r\n  Form, Label, InputForm, Container, ButtonSubmitForm, SubContainer,\r\n} from './styled';\r\nimport * as actionUser from '../../../store/modules/userInfo/actions';\r\n\r\nexport default function Phone() {\r\n  const phone = useSelector((state) => state.userInfo.user.Phones);\r\n  const dispatch = useDispatch();\r\n  const [ddd_cel, setDdd] = useState(' ');\r\n  const [cel_number, setCelPhone] = useState(' ');\r\n  const [ddd_phone, setDddPhone] = useState(' ');\r\n  const [phone_number, setPhoneNumber] = useState(' ');\r\n\r\n  useEffect(() => {\r\n    if (phone.length > 0) {\r\n      if (ddd_cel) setDdd(phone[0].ddd_cel);\r\n      if (cel_number) setCelPhone(phone[0].cel_number);\r\n      if (ddd_phone) setDddPhone(phone[0].ddd_phone);\r\n      if (phone_number) setPhoneNumber(phone[0].phone_number);\r\n    }\r\n  }, [phone]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log('foi');\r\n    dispatch(actionUser.userRequest({\r\n      userPhone: {\r\n        ddd_cel,\r\n        cel_number,\r\n        ddd_phone,\r\n        phone_number,\r\n      },\r\n    }));\r\n  }\r\n  return (\r\n    <SubContainer>\r\n      <Form>\r\n        <Container>\r\n          <Label htmlFor=\"ddd\">\r\n            DDD:\r\n            <InputForm\r\n              inputWidth=\"ddd\"\r\n              type=\"text\"\r\n              name=\"ddd\"\r\n              value={ddd_cel}\r\n              onChange={(e) => setDdd(e.target.value)}\r\n            />\r\n          </Label>\r\n          <Label htmlFor=\"celular\">\r\n            Celular:\r\n            <InputForm\r\n              inputWidth=\"celular\"\r\n              type=\"text\"\r\n              name=\"celular\"\r\n              value={cel_number}\r\n              onChange={(e) => setCelPhone(e.target.value)}\r\n            />\r\n          </Label>\r\n        </Container>\r\n        <Container>\r\n          <Label htmlFor=\"ddd\">\r\n            DDD:\r\n            <InputForm\r\n              inputWidth=\"ddd\"\r\n              type=\"text\"\r\n              name=\"ddd\"\r\n              value={ddd_phone || ' '}\r\n              onChange={(e) => setDddPhone(e.target.value)}\r\n            />\r\n          </Label>\r\n          <Label htmlFor=\"telefone\">\r\n            Telefone:\r\n            <InputForm\r\n              inputWidth=\"telefone\"\r\n              type=\"text\"\r\n              name=\"telefone\"\r\n              value={phone_number || ' '}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n            />\r\n          </Label>\r\n        </Container>\r\n        <ButtonSubmitForm onClick={(e) => handleSubmit(e)}> Salvar </ButtonSubmitForm>\r\n      </Form>\r\n    </SubContainer>\r\n  );\r\n}\r\n"],"names":["Form","styled","SubContainer","Container","Label","darkRedColor","InputForm","width","InputWidth","inputWidth","ButtonSubmitForm","Phone","phone","useSelector","state","userInfo","user","Phones","dispatch","useDispatch","useState","ddd_cel","setDdd","cel_number","setCelPhone","ddd_phone","setDddPhone","phone_number","setPhoneNumber","useEffect","length","htmlFor","type","name","value","onChange","e","target","onClick","preventDefault","console","log","actionUser","userPhone","handleSubmit"],"sourceRoot":""}